#! /bin/bash

# THIS PART IS ONLY USED IF YOU ARE ROOT (e.g. STAGING/PRODUCTION)
CUSTOM_USER=yes
my_user=deploy
my_pass=password    # choose one, won't be used for server access
root_pass=$my_pass  # choose one or same as my_pass; won't be used to login in



# THIS PART INSTALLS A BUNCH OF SOFTWARE
ISMA_PROMPT_COLORS=yes  # github: is-ma/prompt_colors
ISMA_GIT_SHORTCUTS=yes  # github: is-ma/git_shortcuts

UBUNTU_UPDATE=yes

TIME_SYNCHRONIZATION=yes
timezone=America/Mexico_City  # more: timedatectl list-timezones

POSTGRESQL=yes
asdf_version=0.6.0
pg_version=11.1
pg_port=5432
pg_reload_on_reboot=yes       # add a cronjob for you
pg_allow_remote_access=yes    # if yes, limit access with UFW

RAILS=yes
ruby_version=2.5.1
bundler_version=1.17
nvm_version=0.33.11
node_version=10.13.0
rails_version=5.2.1

UFW=yes  # see ideas below
#app01=10.10.10.10
#app02=11.11.11.11
dev_machine_ip=111.111.111.111
rules=()
rules+=("allow ssh")                            # any server
rules+=("allow from $dev_machine_ip")           # staging
#rules+=("allow from $app01 to any port 5432")  # production db
#rules+=("allow from $app02 to any port 5432")  # production db

NGINX_PASSENGER=yes
ubuntu_name=xenial   # for now, the only option

CONFIG_NGINX=yes     # /etc/nginx/sites-enabled/app_name.conf
server_name='_'      # "_" is a catch-all domain
listen=80
friendly_errors=yes  # it's ok for staging
rails_env=staging    # Rails environments/staging.rb must exists!
app_name=hour_app    # try it
app_repo='https://github.com/is-ma/hour-app.git --branch v1.0.0'