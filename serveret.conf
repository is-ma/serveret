#! /bin/bash
# https://github.com/is-ma/serveret.git --branch v3.0.2

#################################################
#              A BUNCH OF SOFTWARE
#################################################
ISMA_PROMPT_COLORS=yes  # github: is-ma/prompt_colors
ISMA_GIT_SHORTCUTS=yes  # github: is-ma/git_shortcuts

UBUNTU_UPDATE=yes

TIME_SYNCHRONIZATION=yes
  timezone=America/Mexico_City  # more: timedatectl list-timezones

POSTGRESQL=yes
  asdf_version=0.6.0
  pg_version=11.1
  # PostgreSQL configuration
  pg_port=5432
  db_user=deploy                # same as your config/database.yml
  pg_reload_on_reboot=yes       # add a cronjob for you
  pg_allow_remote_access=yes    # if yes, limit access with UFW

RAILS=yes
  ruby_version=2.5.1
  bundler_version=1.17
  nvm_version=0.33.11
  node_version=10.13.0
  rails_version=5.2.1



#################################################
#              CUSTOMIZE A PROJECT
#       (USEFUL FOR STAGING/PRODUCTION)
#################################################
UFW=yes  # see ideas below
  rules=()
  rules+=("allow ssh") # it's all you need from development
  #rules+=("allow http")
  #rules+=("allow https")
  #rules+=("allow from 111.111.111.111")  # staging (dev machine)
  #rules+=("allow from 10.10.10.10 to any port 5432")  # production db
  #rules+=("allow from 10.10.10.11 to any port 5432")  # production db

NGINX_PASSENGER=yes
  ubuntu_name=xenial   # for now, xenial is the only option

INSTALL_RAILS_EXAMPLE_APP=yes
  rails_env=staging
# the included example works fine with the included software versions;
# however, for your real app, remember to have in place:
   #   - database.yml
   #   - secrets.yml
   #   - master.key
